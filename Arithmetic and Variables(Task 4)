{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10955276,"sourceType":"datasetVersion","datasetId":6815262}],"dockerImageVersionId":30918,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Set up the exercise\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.intro_to_programming.ex1 import *\nprint('Setup complete.')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T18:07:14.563902Z","iopub.execute_input":"2025-03-07T18:07:14.564214Z","iopub.status.idle":"2025-03-07T18:07:15.086810Z","shell.execute_reply.started":"2025-03-07T18:07:14.564185Z","shell.execute_reply":"2025-03-07T18:07:15.085659Z"}},"outputs":[{"name":"stdout","text":"Setup complete.\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"# Question 1","metadata":{}},{"cell_type":"code","source":"print(\"Hello, world!\")\n\n# DO NOT REMOVE: Mark this question as completed\nq1.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T18:08:15.335731Z","iopub.execute_input":"2025-03-07T18:08:15.336193Z","iopub.status.idle":"2025-03-07T18:08:15.347341Z","shell.execute_reply.started":"2025-03-07T18:08:15.336158Z","shell.execute_reply":"2025-03-07T18:08:15.346124Z"}},"outputs":[{"name":"stdout","text":"Hello, world!\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.2, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"1_RunHelloWorld\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"If you see 'Hello, world!' above, You have successfully printed a message, and you're ready to move on to the next question.","text/markdown":"<span style=\"color:#33cc33\">If you see 'Hello, world!' above, You have successfully printed a message, and you're ready to move on to the next question.</span>"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"\nprint(\"hi my name is Ayesha\")\n\nq2.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T18:10:44.578547Z","iopub.execute_input":"2025-03-07T18:10:44.578945Z","iopub.status.idle":"2025-03-07T18:10:44.589394Z","shell.execute_reply.started":"2025-03-07T18:10:44.578916Z","shell.execute_reply":"2025-03-07T18:10:44.588036Z"}},"outputs":[{"name":"stdout","text":"hi my name is Ayesha\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.2, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"2_PrintAnotherMsg\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Once you have printed your own message, you're ready to move on to the next question.","text/markdown":"<span style=\"color:#33cc33\">Once you have printed your own message, you're ready to move on to the next question.</span>"},"metadata":{}}],"execution_count":5},{"cell_type":"markdown","source":"\n# Question 2","metadata":{}},{"cell_type":"code","source":"print(\"3+4\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T18:12:48.722299Z","iopub.execute_input":"2025-03-07T18:12:48.722836Z","iopub.status.idle":"2025-03-07T18:12:48.728812Z","shell.execute_reply.started":"2025-03-07T18:12:48.722797Z","shell.execute_reply":"2025-03-07T18:12:48.727533Z"}},"outputs":[{"name":"stdout","text":"3+4\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"print(\"She said great job and gave me a high-five!\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T18:14:09.993775Z","iopub.execute_input":"2025-03-07T18:14:09.994199Z","iopub.status.idle":"2025-03-07T18:14:10.000231Z","shell.execute_reply.started":"2025-03-07T18:14:09.994167Z","shell.execute_reply":"2025-03-07T18:14:09.998811Z"}},"outputs":[{"name":"stdout","text":"She said great job and gave me a high-five!\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"print(1+2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T18:16:19.004695Z","iopub.execute_input":"2025-03-07T18:16:19.005128Z","iopub.status.idle":"2025-03-07T18:16:19.013676Z","shell.execute_reply.started":"2025-03-07T18:16:19.005099Z","shell.execute_reply":"2025-03-07T18:16:19.011799Z"}},"outputs":[{"name":"stdout","text":"3\n","output_type":"stream"}],"execution_count":15},{"cell_type":"markdown","source":"# Question 3","metadata":{}},{"cell_type":"code","source":"# Uncomment to get a hint\nq3.hint()\n\n# Uncomment to view solution\nq3.solution()\n\n# DO NOT REMOVE: Check your answer\nq3.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T18:41:54.545123Z","iopub.execute_input":"2025-03-07T18:41:54.545744Z","iopub.status.idle":"2025-03-07T18:41:54.563927Z","shell.execute_reply.started":"2025-03-07T18:41:54.545700Z","shell.execute_reply":"2025-03-07T18:41:54.562785Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 2, \"questionType\": 2, \"questionId\": \"3_LearnCheckingCode\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Hint: If you're ever stuck on a question, it's a good idea to look at the hint before viewing the solution.","text/markdown":"<span style=\"color:#3366cc\">Hint:</span> If you're ever stuck on a question, it's a good idea to look at the hint before viewing the solution."},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 3, \"questionType\": 2, \"questionId\": \"3_LearnCheckingCode\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Solution: If you're still stuck on a question after viewing the hint and re-reading the tutorial, you can view the solution.  You can also view the solution after you have successfully submitted your own answer, to check if the official solution is any different (there may be more than one right answer!).","text/markdown":"<span style=\"color:#33cc99\">Solution:</span> If you're still stuck on a question after viewing the hint and re-reading the tutorial, you can view the solution.  You can also view the solution after you have successfully submitted your own answer, to check if the official solution is any different (there may be more than one right answer!)."},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.2, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"3_LearnCheckingCode\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Once you have printed the hint and the solution, you're ready to move on to the next question.","text/markdown":"<span style=\"color:#33cc33\">Once you have printed the hint and the solution, you're ready to move on to the next question.</span>"},"metadata":{}}],"execution_count":16},{"cell_type":"markdown","source":"# Question 4","metadata":{}},{"cell_type":"code","source":"# Create variables\nnum_years = 4\ndays_per_year = 365 \nhours_per_day = 24\nmins_per_hour = 60\nsecs_per_min = 60\n\n# Calculate number of seconds in four years\ntotal_secs = secs_per_min * mins_per_hour * hours_per_day * days_per_year * num_years\nprint(total_secs)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T18:47:41.611845Z","iopub.execute_input":"2025-03-07T18:47:41.612272Z","iopub.status.idle":"2025-03-07T18:47:41.618828Z","shell.execute_reply.started":"2025-03-07T18:47:41.612243Z","shell.execute_reply":"2025-03-07T18:47:41.617484Z"}},"outputs":[{"name":"stdout","text":"126144000\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"births_per_min =  250\nmins_per_hour = 60\nhours_per_day = 24\nbirths_per_day = births_per_min * mins_per_hour * hours_per_day\nprint(births_per_day)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T18:56:13.378068Z","iopub.execute_input":"2025-03-07T18:56:13.378496Z","iopub.status.idle":"2025-03-07T18:56:13.385246Z","shell.execute_reply.started":"2025-03-07T18:56:13.378468Z","shell.execute_reply":"2025-03-07T18:56:13.384019Z"}},"outputs":[{"name":"stdout","text":"360000\n","output_type":"stream"}],"execution_count":32},{"cell_type":"code","source":"# TODO: Set the value of the births_per_min variable\nbirths_per_min =  250\n\n# TODO: Set the value of the births_per_day variable\n\n\n# DO NOT REMOVE: Check your answer\nq4.check()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T18:56:32.211159Z","iopub.execute_input":"2025-03-07T18:56:32.211539Z","iopub.status.idle":"2025-03-07T18:56:32.221451Z","shell.execute_reply.started":"2025-03-07T18:56:32.211510Z","shell.execute_reply":"2025-03-07T18:56:32.220115Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.2, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"4_BirthsPerYear\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":33},{"cell_type":"markdown","source":"# Question 5","metadata":{}},{"cell_type":"code","source":"# Load the data from the titanic competition\nimport pandas as pd\ntitanic_data = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\n\n# Show the first five rows of the data\ntitanic_data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T19:16:57.538419Z","iopub.execute_input":"2025-03-07T19:16:57.538799Z","iopub.status.idle":"2025-03-07T19:16:57.589321Z","shell.execute_reply.started":"2025-03-07T19:16:57.538764Z","shell.execute_reply":"2025-03-07T19:16:57.588226Z"}},"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":38},{"cell_type":"code","source":"# Number of total passengers\ntotal = len(titanic_data)\nprint(total)\n\n# Number of passengers who survived\nsurvived = (titanic_data.Survived == 1).sum()\nprint(survived)\n\n# Number of passengers under 18\nminors = (titanic_data.Age < 18).sum()\nprint(minors)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T19:20:29.654796Z","iopub.execute_input":"2025-03-07T19:20:29.655198Z","iopub.status.idle":"2025-03-07T19:20:29.667303Z","shell.execute_reply.started":"2025-03-07T19:20:29.655171Z","shell.execute_reply":"2025-03-07T19:20:29.665818Z"}},"outputs":[{"name":"stdout","text":"891\n342\n113\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/pandas/core/computation/expressions.py:73: RuntimeWarning: invalid value encountered in less\n  return op(a, b)\n","output_type":"stream"}],"execution_count":39},{"cell_type":"code","source":"# TODO: Fill in the value of the survived_fraction variable\nsurvived_fraction =342/891\n\n# Print the value of the variable\nprint(survived_fraction)\n\n# TODO: Fill in the value of the minors_fraction variable\nminors_fraction = 113/891\n\n# Print the value of the variable\nprint(minors_fraction)\n\n# DO NOT REMOVE: Check your answer\nq5.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T19:26:06.452241Z","iopub.execute_input":"2025-03-07T19:26:06.452598Z","iopub.status.idle":"2025-03-07T19:26:06.463226Z","shell.execute_reply.started":"2025-03-07T19:26:06.452572Z","shell.execute_reply":"2025-03-07T19:26:06.462118Z"}},"outputs":[{"name":"stdout","text":"0.3838383838383838\n0.12682379349046016\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.2, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"5_BonusTitanic\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":44}]}